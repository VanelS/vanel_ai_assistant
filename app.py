import logging
import gradio as gr
from litellm import completion
from dotenv import load_dotenv
import os
import time

from core import *

# Chargement des variables d'environnement
load_dotenv()

# Validation des variables d'environnement essentielles
if not os.getenv("GEMINI_MODEL_NAME"):
    raise ValueError("Environment variable GEMINI_MODEL_NAME is missing.")

# Configuration des modèles et instructions
MODEL_NAME = f"gemini/{os.getenv('GEMINI_MODEL_NAME')}"

# Lecture et validation du fichier contenant le contexte du modèle
try:
    with open("files/cv.md", encoding="utf-8") as f:
        MODEL_CONTEXT = f.read()
except FileNotFoundError:
    raise FileNotFoundError("The file 'files/cv.md' was not found.")
except Exception as e:
    raise ValueError(f"An error occurred while reading 'files/cv.md': {str(e)}")

MODEL_SYSTEM_INSTRUCTIONS = os.getenv("SYSTEM_INSTRUCTIONS")

# Limitation de l'historique pour améliorer les performances
MAX_HISTORY_LENGTH = os.getenv("MAX_HISTORY_LENGTH", 10)



def inference(message, history):
    """Generate AI responses based on the user message and conversation history.

    Args:
        message (str): The latest user message.
        history (list): The conversation history as a list of message pairs.

    Yields:
        str: Partial response messages generated by the AI.
    """
    try:
        messages_litellm = process_messages(message, history, MODEL_NAME, MODEL_SYSTEM_INSTRUCTIONS, MODEL_CONTEXT)

        partial_message = ""
        for chunk in completion(
                model=MODEL_NAME,
                type="messages",
                messages=messages_litellm,
                max_new_tokens=1000,
                safety_settings=[
                    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_LOW_AND_ABOVE"},
                    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_LOW_AND_ABOVE"},
                    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_LOW_AND_ABOVE"},
                    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_ONLY_HIGH"},
                ],
                temperature=0.3,
                top_k=100,
                top_p=0.9,
                repetition_penalty=1.18,
                stream=True
        ):
            if chunk:
                if 'choices' in chunk and len(chunk['choices']) > 0:
                    delta = chunk['choices'][0].get('delta', {})
                    content = delta.get('content', '')
                    if content:
                        partial_message += content
                    else:
                        logging.warning("Empty content in chunk delta.")
                else:
                    logging.warning("Chunk does not contain valid 'choices'.")
            else:
                logging.warning("Received empty chunk.")
            time.sleep(0.03)
            yield partial_message
    except Exception as e:
        logging.error(f"Exception encountered: {str(e)}")
        yield "An error occurred. Please 'Clear' the error and try your question again."


# Configuration du logging
LOGGING_LEVEL = os.getenv("LOGGING_LEVEL", "INFO").upper()
logging.basicConfig(
    level=getattr(logging, LOGGING_LEVEL, logging.INFO),
    format="[%(asctime)s][%(levelname)s] %(message)s"
)

# Lancement de l'interface utilisateur
demo = gr.ChatInterface(
    inference,
    chatbot=gr.Chatbot(height=400),
    textbox=gr.Textbox(placeholder="Enter text here...", container=True, scale=3),
    description="""Vanel's AI Assistant is designed to provide clear and professional answers to all your questions about Vanel Steve SIYOU FOTSO, leveraging his background, skills, and expertise. Ask your questions and receive precise, relevant responses!""",
    title="Vanel's AI Assistant",
    examples=[
        "Who is Vanel SIYOU FOTSO?",
        "Summarize the education of Vanel SIYOU FOTSO",
        "What are the main skills of Vanel SIYOU FOTSO?",
        "What do other people say about Vanel SIYOU FOTSO?",
        "What is Vanel SIYOU FOTSO's current work position?",
        "Is Vanel SIYOU FOTSO open to new work opportunities?",
        "Can you share details about Vanel SIYOU FOTSO's thesis?",
        "Describe his proficiency with Python programming",
    ],
    theme="soft",
)

if __name__ == "__main__":
    demo.queue().launch()